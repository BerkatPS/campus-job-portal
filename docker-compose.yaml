services:
  # PHP Application Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_portal_app
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./wait-for-db.sh:/wait-for-db.sh
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=campus_job_portal
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - job_portal_network
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command: 
      - |
        chmod +x /wait-for-db.sh
        /wait-for-db.sh db
        php artisan config:clear
        php artisan migrate --force
        php-fpm
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Nginx Web Server Service
  webserver:
    image: nginx:alpine
    container_name: job_portal_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - ./storage/app/public:/var/www/storage/app/public
    networks:
      - job_portal_network
    depends_on:
      - app
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: job_portal_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: campus_job_portal
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_password
      MYSQL_ROOT_HOST: '%'
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
      - mysql_logs:/var/log/mysql
    networks:
      - job_portal_network
    ports:
      - "3306:3306"
    command: >
      --default-authentication-plugin=mysql_native_password
      --bind-address=0.0.0.0
      --log-error=/var/log/mysql/error.log
      --general-log=1
      --general-log-file=/var/log/mysql/general.log
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long_query_time=2
      --log-queries-not-using-indexes=1
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ppassword"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 45s

  # Queue Worker Service (untuk background jobs)
  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_portal_queue
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
      - ./wait-for-db.sh:/wait-for-db.sh
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=campus_job_portal
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - job_portal_network
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        chmod +x /wait-for-db.sh
        /wait-for-db.sh db
        sleep 15  # Tunggu app container siap
        php artisan queue:work --sleep=3 --tries=3 --max-time=3600

  # Scheduler Service (untuk Laravel scheduled tasks)
  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: job_portal_scheduler
    restart: unless-stopped
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
      - ./bootstrap/cache:/var/www/bootstrap/cache
      - ./wait-for-db.sh:/wait-for-db.sh
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=campus_job_portal
      - DB_USERNAME=root
      - DB_PASSWORD=password
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - job_portal_network
    depends_on:
      db:
        condition: service_healthy
      app:
        condition: service_healthy
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        chmod +x /wait-for-db.sh
        /wait-for-db.sh db
        sleep 20  # Tunggu app container siap
        while true; do
          php artisan schedule:run --verbose --no-interaction
          sleep 60
        done

# Networks
networks:
  job_portal_network:
    driver: bridge

# Volumes
volumes:
  dbdata:
    driver: local
  mysql_logs:
    driver: local