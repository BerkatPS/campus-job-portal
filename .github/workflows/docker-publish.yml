name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

# Izinkan kanvas tindakan baca dan tulis
permissions:
  contents: read
  packages: write
  id-token: write

env:
  APP_IMAGE: ghcr.io/berkatps/campus-job-portal

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate GitHub token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ steps.generate-token.outputs.token || secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.APP_IMAGE }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=sha,format=short

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  test:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy .env file
        run: cp .env.example .env

      - name: Set up Docker Compose
        run: |
          docker-compose up -d
          docker-compose ps

      - name: Install dependencies
        run: docker-compose exec -T app composer install

      - name: Generate application key
        run: docker-compose exec -T app php artisan key:generate

      - name: Run database migrations
        run: docker-compose exec -T app php artisan migrate:fresh --seed

      - name: Run tests
        run: docker-compose exec -T app php artisan test

      - name: Stop containers
        if: always()
        run: docker-compose down
